{"version":3,"sources":["BigIntStats.js"],"sourcesContent":["var fs = require('fs');\nvar JSBI = require('jsbi-compat');\nvar extend = require('legacy-extends');\n\nvar constants = require('fs-constants');\nvar S_IFIFO = constants.S_IFIFO;\nvar S_IFBLK = constants.S_IFBLK;\nvar S_IFSOCK = constants.S_IFSOCK;\nvar S_IFMT = constants.S_IFMT;\nvar S_IFMT_BIG = JSBI.BigInt(S_IFMT);\n\nvar StatsBase = fs.Stats;\nvar isWindows = process.platform === 'win32';\nvar kNsPerMsBigInt = JSBI.BigInt(10 ** 6);\n\n// The Date constructor performs Math.floor() to the multiplytamp.\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\n// Since there may be a precision loss when the multiplytamp is\n// converted to a floating point number, we manually round\n// the multiplytamp here before passing it to Date().\n// Refs: https://github.com/nodejs/node/pull/12607\nfunction dateFromMs(ms) {\n  return new Date(JSBI.toNumber(ms) + 0.5);\n}\n\nfunction BigIntStats(dev, mode, nlink, uid, gid, rdev, blksize, ino, size, blocks, atimeNs, mtimeNs, ctimeNs, birthtimeNs) {\n  var self = BigIntStats.superConstruct.call(this, dev, mode, nlink, uid, gid, rdev, blksize, ino, size, blocks);\n  self.atimeMs = JSBI.divide(atimeNs, kNsPerMsBigInt);\n  self.atime = dateFromMs(self.atimeMs);\n  self.atimeNs = atimeNs;\n\n  self.mtimeMs = JSBI.divide(mtimeNs, kNsPerMsBigInt);\n  self.mtime = dateFromMs(self.mtimeMs);\n  self.mtimeNs = mtimeNs;\n\n  self.ctimeMs = JSBI.divide(ctimeNs, kNsPerMsBigInt);\n  self.ctime = dateFromMs(self.ctimeMs);\n  self.ctimeNs = ctimeNs;\n\n  self.birthtimeMs = JSBI.divide(birthtimeNs, kNsPerMsBigInt);\n  self.birthtime = dateFromMs(self.birthtimeMs);\n  self.birthtimeNs = birthtimeNs;\n  return self;\n}\nextend(BigIntStats, StatsBase, { ensureProperties: ['dev', 'mode', 'nlink', 'uid', 'gid', 'rdev', 'blksize', 'ino', 'size', 'blocks'] });\n\nBigIntStats.prototype._checkModeProperty = function (property) {\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK || property === S_IFSOCK)) {\n    return false; // Some types are not available on Windows\n  }\n  return JSBI.equal(JSBI.bitwiseAnd(this.mode, S_IFMT_BIG), JSBI.BigInt(property));\n};\n\nmodule.exports = BigIntStats;\n"],"names":["fs","require","JSBI","extend","constants","S_IFIFO","S_IFBLK","S_IFSOCK","S_IFMT","S_IFMT_BIG","BigInt","StatsBase","Stats","isWindows","process","platform","kNsPerMsBigInt","dateFromMs","ms","Date","toNumber","BigIntStats","dev","mode","nlink","uid","gid","rdev","blksize","ino","size","blocks","atimeNs","mtimeNs","ctimeNs","birthtimeNs","self","superConstruct","call","atimeMs","divide","atime","mtimeMs","mtime","ctimeMs","ctime","birthtimeMs","birthtime","ensureProperties","prototype","_checkModeProperty","property","equal","bitwiseAnd","module","exports"],"mappings":";AAAA,IAAIA,KAAKC,QAAQ;AACjB,IAAIC,OAAOD,QAAQ;AACnB,IAAIE,SAASF,QAAQ;AAErB,IAAIG,YAAYH,QAAQ;AACxB,IAAII,UAAUD,UAAUC,OAAO;AAC/B,IAAIC,UAAUF,UAAUE,OAAO;AAC/B,IAAIC,WAAWH,UAAUG,QAAQ;AACjC,IAAIC,SAASJ,UAAUI,MAAM;AAC7B,IAAIC,aAAaP,KAAKQ,MAAM,CAACF;AAE7B,IAAIG,YAAYX,GAAGY,KAAK;AACxB,IAAIC,YAAYC,QAAQC,QAAQ,KAAK;AACrC,IAAIC,iBAAiBd,KAAKQ,MAAM,CAAC,KAAA,IAAA,IAAM;AAEvC,kEAAkE;AAClE,4DAA4D;AAC5D,+DAA+D;AAC/D,0DAA0D;AAC1D,qDAAqD;AACrD,kDAAkD;AAClD,SAASO,WAAWC,EAAE;IACpB,OAAO,IAAIC,KAAKjB,KAAKkB,QAAQ,CAACF,MAAM;AACtC;AAEA,SAASG,YAAYC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,OAAO,EAAEC,GAAG,EAAEC,IAAI,EAAEC,MAAM,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,WAAW;IACvH,IAAIC,OAAOf,YAAYgB,cAAc,CAACC,IAAI,CAAC,IAAI,EAAEhB,KAAKC,MAAMC,OAAOC,KAAKC,KAAKC,MAAMC,SAASC,KAAKC,MAAMC;IACvGK,KAAKG,OAAO,GAAGrC,KAAKsC,MAAM,CAACR,SAAShB;IACpCoB,KAAKK,KAAK,GAAGxB,WAAWmB,KAAKG,OAAO;IACpCH,KAAKJ,OAAO,GAAGA;IAEfI,KAAKM,OAAO,GAAGxC,KAAKsC,MAAM,CAACP,SAASjB;IACpCoB,KAAKO,KAAK,GAAG1B,WAAWmB,KAAKM,OAAO;IACpCN,KAAKH,OAAO,GAAGA;IAEfG,KAAKQ,OAAO,GAAG1C,KAAKsC,MAAM,CAACN,SAASlB;IACpCoB,KAAKS,KAAK,GAAG5B,WAAWmB,KAAKQ,OAAO;IACpCR,KAAKF,OAAO,GAAGA;IAEfE,KAAKU,WAAW,GAAG5C,KAAKsC,MAAM,CAACL,aAAanB;IAC5CoB,KAAKW,SAAS,GAAG9B,WAAWmB,KAAKU,WAAW;IAC5CV,KAAKD,WAAW,GAAGA;IACnB,OAAOC;AACT;AACAjC,OAAOkB,aAAaV,WAAW;IAAEqC,kBAAkB;QAAC;QAAO;QAAQ;QAAS;QAAO;QAAO;QAAQ;QAAW;QAAO;QAAQ;KAAS;AAAC;AAEtI3B,YAAY4B,SAAS,CAACC,kBAAkB,GAAG,SAAUC,QAAQ;IAC3D,IAAItC,aAAcsC,CAAAA,aAAa9C,WAAW8C,aAAa7C,WAAW6C,aAAa5C,QAAO,GAAI;QACxF,OAAO,OAAO,0CAA0C;IAC1D;IACA,OAAOL,KAAKkD,KAAK,CAAClD,KAAKmD,UAAU,CAAC,IAAI,CAAC9B,IAAI,EAAEd,aAAaP,KAAKQ,MAAM,CAACyC;AACxE;AAEAG,OAAOC,OAAO,GAAGlC"}