{"version":3,"sources":["/Users/kevin/Dev/_archive/@unmaintained/big-int-stats/src/BigIntStats.ts"],"sourcesContent":["import { Stats } from 'fs';\nimport constants from 'fs-constants';\nimport JSBI from 'jsbi-compat';\n\nvar S_IFIFO = constants.S_IFIFO;\nvar S_IFBLK = constants.S_IFBLK;\nvar S_IFSOCK = constants.S_IFSOCK;\nvar S_IFMT = constants.S_IFMT;\nvar S_IFMT_BIG = JSBI.BigInt(S_IFMT);\n\nvar isWindows = process.platform === 'win32';\nvar kNsPerMsBigInt = JSBI.BigInt(10 ** 6);\n\n// The Date constructor performs Math.floor() to the multiplytamp.\n// https://www.ecma-international.org/ecma-262/#sec-timeclip\n// Since there may be a precision loss when the multiplytamp is\n// converted to a floating point number, we manually round\n// the multiplytamp here before passing it to Date().\n// Refs: https://github.com/nodejs/node/pull/12607\nfunction dateFromMs(ms) {\n  return new Date(JSBI.toNumber(ms) + 0.5);\n}\n\n// @ts-ignore\nexport default class BigIntStats extends Stats {\n  atime: Date;\n  mtime: Date;\n  ctime: Date;\n  birthtime: Date;\n  atimeNs: bigint;\n  mtimeNs: bigint;\n  ctimeNs: bigint;\n  birthtimeNs: bigint;\n\n  constructor(dev: number, mode: number, nlink: number, uid: number, gid: number, rdev: number, blksize: number, ino: number, size: number, blocks: number, atimeNs: bigint, mtimeNs: bigint, ctimeNs: bigint, birthtimeNs: bigint) {\n    super();\n    this.dev = dev;\n    this.mode = mode;\n    this.nlink = nlink;\n    this.uid = uid;\n    this.gid = gid;\n    this.rdev = rdev;\n    this.blksize = blksize;\n    this.ino = ino;\n    this.size = size;\n    this.blocks = blocks;\n    this.atimeMs = JSBI.divide(atimeNs, kNsPerMsBigInt);\n    this.atime = dateFromMs(this.atimeMs);\n    this.atimeNs = atimeNs;\n\n    this.mtimeMs = JSBI.divide(mtimeNs, kNsPerMsBigInt);\n    this.mtime = dateFromMs(this.mtimeMs);\n    this.mtimeNs = mtimeNs;\n\n    this.ctimeMs = JSBI.divide(ctimeNs, kNsPerMsBigInt);\n    this.ctime = dateFromMs(this.ctimeMs);\n    this.ctimeNs = ctimeNs;\n\n    this.birthtimeMs = JSBI.divide(birthtimeNs, kNsPerMsBigInt);\n    this.birthtime = dateFromMs(this.birthtimeMs);\n    this.birthtimeNs = birthtimeNs;\n  }\n\n  _checkModeProperty(property) {\n    if (isWindows && (property === S_IFIFO || property === S_IFBLK || property === S_IFSOCK)) {\n      return false; // Some types are not available on Windows\n    }\n    return JSBI.equal(JSBI.bitwiseAnd(this.mode, S_IFMT_BIG), JSBI.BigInt(property));\n  }\n}\n"],"names":["Stats","constants","JSBI","S_IFIFO","S_IFBLK","S_IFSOCK","S_IFMT","S_IFMT_BIG","BigInt","isWindows","process","platform","kNsPerMsBigInt","dateFromMs","ms","Date","toNumber","BigIntStats","_checkModeProperty","property","equal","bitwiseAnd","mode","dev","nlink","uid","gid","rdev","blksize","ino","size","blocks","atimeNs","mtimeNs","ctimeNs","birthtimeNs","atimeMs","divide","atime","mtimeMs","mtime","ctimeMs","ctime","birthtimeMs","birthtime"],"mappings":"AAAA,SAASA,KAAK,QAAQ,KAAK;AAC3B,OAAOC,eAAe,eAAe;AACrC,OAAOC,UAAU,cAAc;AAE/B,IAAIC,UAAUF,UAAUE,OAAO;AAC/B,IAAIC,UAAUH,UAAUG,OAAO;AAC/B,IAAIC,WAAWJ,UAAUI,QAAQ;AACjC,IAAIC,SAASL,UAAUK,MAAM;AAC7B,IAAIC,aAAaL,KAAKM,MAAM,CAACF;AAE7B,IAAIG,YAAYC,QAAQC,QAAQ,KAAK;AACrC,IAAIC,iBAAiBV,KAAKM,MAAM,CAAC,MAAM;AAEvC,kEAAkE;AAClE,4DAA4D;AAC5D,+DAA+D;AAC/D,0DAA0D;AAC1D,qDAAqD;AACrD,kDAAkD;AAClD,SAASK,WAAWC,EAAE;IACpB,OAAO,IAAIC,KAAKb,KAAKc,QAAQ,CAACF,MAAM;AACtC;AAGe,IAAA,AAAMG,cAAN,MAAMA,oBAAoBjB;IAuCvCkB,mBAAmBC,QAAQ,EAAE;QAC3B,IAAIV,aAAcU,CAAAA,aAAahB,WAAWgB,aAAaf,WAAWe,aAAad,QAAO,GAAI;YACxF,OAAO,OAAO,0CAA0C;QAC1D;QACA,OAAOH,KAAKkB,KAAK,CAAClB,KAAKmB,UAAU,CAAC,IAAI,CAACC,IAAI,EAAEf,aAAaL,KAAKM,MAAM,CAACW;IACxE;IAlCA,YAAYI,GAAW,EAAED,IAAY,EAAEE,KAAa,EAAEC,GAAW,EAAEC,GAAW,EAAEC,IAAY,EAAEC,OAAe,EAAEC,GAAW,EAAEC,IAAY,EAAEC,MAAc,EAAEC,OAAe,EAAEC,OAAe,EAAEC,OAAe,EAAEC,WAAmB,CAAE;QAChO,KAAK;QACL,IAAI,CAACZ,GAAG,GAAGA;QACX,IAAI,CAACD,IAAI,GAAGA;QACZ,IAAI,CAACE,KAAK,GAAGA;QACb,IAAI,CAACC,GAAG,GAAGA;QACX,IAAI,CAACC,GAAG,GAAGA;QACX,IAAI,CAACC,IAAI,GAAGA;QACZ,IAAI,CAACC,OAAO,GAAGA;QACf,IAAI,CAACC,GAAG,GAAGA;QACX,IAAI,CAACC,IAAI,GAAGA;QACZ,IAAI,CAACC,MAAM,GAAGA;QACd,IAAI,CAACK,OAAO,GAAGlC,KAAKmC,MAAM,CAACL,SAASpB;QACpC,IAAI,CAAC0B,KAAK,GAAGzB,WAAW,IAAI,CAACuB,OAAO;QACpC,IAAI,CAACJ,OAAO,GAAGA;QAEf,IAAI,CAACO,OAAO,GAAGrC,KAAKmC,MAAM,CAACJ,SAASrB;QACpC,IAAI,CAAC4B,KAAK,GAAG3B,WAAW,IAAI,CAAC0B,OAAO;QACpC,IAAI,CAACN,OAAO,GAAGA;QAEf,IAAI,CAACQ,OAAO,GAAGvC,KAAKmC,MAAM,CAACH,SAAStB;QACpC,IAAI,CAAC8B,KAAK,GAAG7B,WAAW,IAAI,CAAC4B,OAAO;QACpC,IAAI,CAACP,OAAO,GAAGA;QAEf,IAAI,CAACS,WAAW,GAAGzC,KAAKmC,MAAM,CAACF,aAAavB;QAC5C,IAAI,CAACgC,SAAS,GAAG/B,WAAW,IAAI,CAAC8B,WAAW;QAC5C,IAAI,CAACR,WAAW,GAAGA;IACrB;AAQF;AA9CA,aAAa;AACb,SAAqBlB,yBA6CpB"}